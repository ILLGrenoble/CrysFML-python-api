name: Python libs

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  schedule:
  # Every day at 1am
  - cron: '0 1 * * *'

jobs:

  get_Latest:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    steps:
    - name: Checkout ILL repo
      run: |
        git clone https://code.ill.fr/scientific-software/crysfml/ ./
        # WE ARE NOW USING MASTER BRANCH
        # git checkout feature-python_api-build_wheels
        rm -rf ./.git ./Html
    - uses: actions/upload-artifact@v2
      with:
        name: CrysFML_SRC
        path: ${{ github.workspace }}
        retention-days: 1


  create-Linux:
    runs-on: ubuntu-latest

    needs: get_Latest

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: CrysFML_SRC

    - name: Build manylinux wheels
      run:  |
        chmod +x ./Scripts/buildscript.sh
        docker run -e PLAT=manylinux2010_x86_64 -v ${{ github.workspace }}:/io quay.io/pypa/manylinux2010_x86_64 /io/Scripts/buildscript.sh
    - uses: actions/upload-artifact@v2
      with:
        name: CrysFML - Linux
        path: ${{ github.workspace }}/dist/*.whl
        
#    - name: Publish distribution package to Test PyPI
#     uses: pypa/gh-action-pypi-publish@master
#     with:
#       user: __token__
#       password: ${{ secrets.TEST_PYPI_API_TOKEN }}
#       repository_url: https://test.pypi.org/legacy/  
#       verbose: true

  create-OSX:
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.8']
        os: [macos-10.15]
        gcc_v: [ 10 ] # Version of GFortran we want to use.

    runs-on: ${{ matrix.os }}

    needs: get_Latest

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: CrysFML_SRC

    - name: Setup python
      uses: actions/setup-python@v1
      with:
        python-version: ${{matrix.python-version}}

    - name: Install cmake
      run: pip3 install cmake delocate wheel

    - name: Build CFML (OSX)
      env:
        FC: gfortran-${{ matrix.gcc_v }}
        CC: gcc-${{ matrix.gcc_v }}
      run: |
        pip3 wheel ./ --no-deps -w ./old/
        delocate-wheel -w dist -v ./old/*.whl
        for n1 in ./dist/*.whl ; do
          n2=$( echo ${n1} | sed -e 's/10_15/10_13/g' )
          mv ${n1} ${n2}
        done

    - uses: actions/upload-artifact@v2
      with:
        name: CrysFML - MacOS
        path: ./dist/*.whl



  Publish_Packages:
    runs-on: ubuntu-latest
    needs: [create-Linux, create-OSX] #, create-Windows]
    steps:
    - uses: actions/download-artifact@v2    
      with:
        name: CrysFML - Linux
        path: dist/
    - uses: actions/download-artifact@v2    
      with:
        name: CrysFML - MacOS
        path: dist/
    - name: Publish distribution package to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__     
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
#        packages_dir: "/home/runner/work/CrysFML-python-api/CrysFML-python-api/**"
        repository_url: https://test.pypi.org/legacy/  
        verbose: true
