name: Python libs

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  schedule:
  # Every day at 1am
  - cron: '0 1 * * *'

jobs:

  get_Latest:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    steps:
    - name: Checkout ILL repo
      run: |
        git clone https://code.ill.fr/scientific-software/crysfml/ ./
        # WE ARE NOW USING MASTER BRANCH
        # git checkout feature-python_api-build_wheels
        rm -rf ./.git ./Html
    - uses: actions/upload-artifact@v2
      with:
        name: CrysFML_SRC
        path: ${{ github.workspace }}
        retention-days: 1


  create-Linux:
    runs-on: ubuntu-latest

    needs: get_Latest

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: CrysFML_SRC

    - name: Build manylinux wheels
      run:  |
        chmod +x ./Scripts/buildscript.sh
        docker run -e PLAT=manylinux2010_x86_64 -v ${{ github.workspace }}:/io quay.io/pypa/manylinux2010_x86_64 /io/Scripts/buildscript.sh
    - uses: actions/upload-artifact@v2
      with:
        name: CrysFML - Linux
        path: ${{ github.workspace }}/dist/*.whl
        
    - name: Publish distribution package to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/  
        verbose: true

  Upload_Artifacts:
    runs-on: ubuntu-latest
    needs: [create-Linux] #, create-OSX, create-Windows]
    steps:
    - uses: actions/download-artifact@v2
    - name: Upload Artifacts GitHub releases
      uses: ncipollo/release-action@v1
      with:
        draft: false
        prerelease: true
        allowUpdates: true
        replacesArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "./**/*.whl"
        tag: "CFML"
        body: "This is a build of the CFML libraries."
        
#  Publish_Packages:
#    runs-on: ubuntu-latest
#    needs: [create-Linux] #, create-OSX, create-Windows]
#    steps:
#    - uses: actions/download-artifact@v2    
#      with:
#        name: CrysFML - Linux
#    - name: Publish distribution package to Test PyPI
#      uses: pypa/gh-action-pypi-publish@master
#      with:
#        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
#        packages_dir: "/home/runner/work/CrysFML-python-api/CrysFML-python-api/**"
#        repository_url: https://test.pypi.org/legacy/  
#        verbose: true
